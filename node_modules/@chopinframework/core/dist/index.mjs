// src/index.ts
var Oracle = class {
  constructor(callbackUrl) {
    this.callbackUrl = callbackUrl;
  }
  async notarize(getter) {
    const value = await getter();
    await fetch(this.callbackUrl, {
      method: "POST",
      body: JSON.stringify(value)
    });
    return value;
  }
  fetch = async (...args) => {
    const response = await this.notarize(
      () => fetch(...args).then(async (response2) => ({
        status: response2.status,
        statusText: response2.statusText,
        headers: Array.from(response2.headers.entries()),
        body: new Uint8Array(await response2.arrayBuffer())
        // store in a typed array
      }))
    );
    return new Response(response.body, {
      status: response.status,
      statusText: response.statusText,
      headers: response.headers
    });
  };
  now() {
    return this.notarize(() => Date.now());
  }
  random() {
    return this.notarize(() => Math.random());
  }
};
export {
  Oracle
};
